---
# This set of tasks creates a domain-wide service account for Teleport and sets
# appropriate (restricted) permissions.
#
# See https://goteleport.com/docs/ver/9.0/desktop-access/getting-started/#step-16-create-a-restrictive-service-account
#
# The dsacls commands closely follow the official instructions. In the absence
# of suitable Ansible AdObject/ACL modules, we use PowerShell scripts to test
# for the presence of the required object/permissions, to ensure idempotency.

##########################
# CREATE SERVICE ACCOUNT #
##########################

- name: Create Teleport service account
  community.windows.win_domain_user:
    name: Teleport Service
    password: "{{ teleport_service_user_password }}"
    password_never_expires: yes
    update_password: on_create
    description: Account to run the Teleport service
    path: ou=Service Accounts,dc=ad,dc=pomeroy,dc=me
    state: present
    domain_user: "{{ ansible_user }}"
    domain_password: "{{ ansible_password }}"

#################################
# CREATE TELEPORT CDP CONTAINER #
#################################

- name: Check if Teleport container exists (CDP is CRL Distribution Point)
  ansible.windows.win_powershell:
    script: |
      (Get-AdObject -Filter {Name -eq "Teleport"} -SearchBase "CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}" | Measure-Object).Count
  register: cdp_test
  changed_when: false

- name: Create Teleport CDP container
  ansible.windows.win_powershell:
    script: |
      New-ADObject -Name 'Teleport' -Type 'container' -Path 'CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}'
  when: cdp_test.output[0] == 0
  register: cdp_create
  failed_when: cdp_create.error

####################################
# GRANT CONTAINER CREATE PERMISION #
####################################

- name: Test Teleport Service permission to create containers (bf967a8b-0de6-11d0-a285-00aa003049e2) in the CDP container
  ansible.windows.win_powershell:
    # Need to import AD module explicitly, otherwise AD: drive is unavailable
    script: |
      Import-Module -Name ActiveDirectory
      $acl = (Get-Acl "Ad:CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}").Access `
        | Where-Object {$_.IdentityReference -eq "{{ domain_netbios }}\Teleport Service" -and $_.ObjectType -eq "bf967a8b-0de6-11d0-a285-00aa003049e2"}
      $acl.ActiveDirectoryRights.HasFlag([System.DirectoryServices.ActiveDirectoryRights]::CreateChild) -and `
        $acl.AccessControlType.HasFlag([System.Security.AccessControl.AccessControlType]::Allow)
  register: ldap_test
  changed_when: false

- name: Grant Teleport Service permission to create LDAP containers in the CDP container
  ansible.windows.win_shell: dsacls "CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}" /I:T /G "Teleport Service:CC;container;"
  # ldap_test.output[0] evalutates to true when the permission is set
  when: not ldap_test.output[0]

############################################
# GRANT cRLDistributionPoint CREATE/DELETE #
############################################

- name: Test Teleport Service permission to create and delete cRLDistributionPoint (167758ca-47f3-11d1-a9c3-0000f80367c1) objects in the CDP/Teleport container.
  ansible.windows.win_powershell:
    # Need to import AD module explicitly, otherwise AD: drive is unavailable
    script: |
      Import-Module -Name ActiveDirectory
      $acl = (Get-Acl "Ad:CN=Teleport,CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}").Access | `
        Where-Object {$_.IdentityReference -eq "{{ domain_netbios }}\Teleport Service" -and $_.ObjectType -eq "167758ca-47f3-11d1-a9c3-0000f80367c1"}
      $acl.ActiveDirectoryRights.HasFlag([System.DirectoryServices.ActiveDirectoryRights]::CreateChild) -and `
        $acl.ActiveDirectoryRights.HasFlag([System.DirectoryServices.ActiveDirectoryRights]::DeleteChild) -and `
        $acl.AccessControlType.HasFlag([System.Security.AccessControl.AccessControlType]::Allow)
  register: cRLDistributionPoint_test
  changed_when: false

- name: Grant Teleport Service permission to create and delete cRLDistributionPoint objects in the CDP/Teleport container.
  ansible.windows.win_shell: dsacls "CN=Teleport,CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}" /I:T /G "Teleport Service:CCDC;cRLDistributionPoint;"
  # cRLDistributionPoint_test.output[0] evalutates to true when the permission is set
  when: not cRLDistributionPoint_test.output[0]

#########################################
# GRANT certificateRevocationList WRITE #
#########################################

- name: Test Teleport Service permission to write the certificateRevocationList property (1677579f-47f3-11d1-a9c3-0000f80367c1) in the CDP/Teleport container.
  ansible.windows.win_powershell:
    # Need to import AD module explicitly, otherwise AD: drive is unavailable
    script: |
      Import-Module -Name ActiveDirectory
      $acl = (Get-Acl "Ad:CN=Teleport,CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}").Access | `
        Where-Object {$_.IdentityReference -eq "{{ domain_netbios }}\Teleport Service" -and $_.ObjectType -eq "1677579f-47f3-11d1-a9c3-0000f80367c1"}
      $acl.ActiveDirectoryRights.HasFlag([System.DirectoryServices.ActiveDirectoryRights]::WriteProperty) -and `
        $acl.AccessControlType.HasFlag([System.Security.AccessControl.AccessControlType]::Allow)
  register: certificateRevocationList_test
  changed_when: false

- name: Grant Teleport Service permission to write the certificateRevocationList property (1677579f-47f3-11d1-a9c3-0000f80367c1) in the CDP/Teleport container.
  ansible.windows.win_shell: dsacls "CN=Teleport,CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}" /I:T /G "Teleport Service:WP;certificateRevocationList;"
  # certificateRevocationList_test.output[0] evalutates to true when the permission is set
  when: not certificateRevocationList_test.output[0]

######################################
# GRANT certificationAuthority WRITE #
######################################

- name: Test Teleport Service permission to create and delete certificationAuthority objects (3fdfee50-47f4-11d1-a9c3-0000f80367c1) in the NTAuthCertificates container.
  ansible.windows.win_powershell:
    # Need to import AD module explicitly, otherwise AD: drive is unavailable
    script: |
      Import-Module -Name ActiveDirectory
      $acl = (Get-Acl "Ad:CN=NTAuthCertificates,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}").Access | `
        Where-Object {$_.IdentityReference -eq "{{ domain_netbios }}\Teleport Service" -and $_.ObjectType -eq "3fdfee50-47f4-11d1-a9c3-0000f80367c1"}
      $acl.ActiveDirectoryRights.HasFlag([System.DirectoryServices.ActiveDirectoryRights]::CreateChild) -and `
        $acl.ActiveDirectoryRights.HasFlag([System.DirectoryServices.ActiveDirectoryRights]::DeleteChild) -and `
        $acl.AccessControlType.HasFlag([System.Security.AccessControl.AccessControlType]::Allow)
  register: NTAuthCertificates_test
  changed_when: false

- name: Grant Teleport Service permission to create and delete certificationAuthority objects (3fdfee50-47f4-11d1-a9c3-0000f80367c1) in the NTAuthCertificates container.
  ansible.windows.win_shell: dsacls "CN=NTAuthCertificates,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}" /I:T /G "Teleport Service:CCDC;certificationAuthority;"
  # NTAuthCertificates_test.output[0] evalutates to true when the permission is set
  when: not NTAuthCertificates_test.output[0]

##############################
# GRANT cACertificate  WRITE #
##############################

- name: Test Teleport Service permission to write the cACertificate property (bf967932-0de6-11d0-a285-00aa003049e2) in the NTAuthCertificates container.
  ansible.windows.win_powershell:
    # Need to import AD module explicitly, otherwise AD: drive is unavailable
    script: |
      Import-Module -Name ActiveDirectory
      $acl = (Get-Acl "Ad:CN=NTAuthCertificates,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}").Access | `
        Where-Object {$_.IdentityReference -eq "{{ domain_netbios }}\Teleport Service" -and $_.ObjectType -eq "bf967932-0de6-11d0-a285-00aa003049e2"}
      $acl.ActiveDirectoryRights.HasFlag([System.DirectoryServices.ActiveDirectoryRights]::WriteProperty) -and `
        $acl.AccessControlType.HasFlag([System.Security.AccessControl.AccessControlType]::Allow)
  register: cACertificate_test
  changed_when: false

- name: Grant Teleport Service permission to write the cACertificate property (bf967932-0de6-11d0-a285-00aa003049e2) in the NTAuthCertificates container.
  ansible.windows.win_shell: dsacls "CN=NTAuthCertificates,CN=Public Key Services,CN=Services,CN=Configuration,{{ domain_dn }}" /I:T /G "Teleport Service:WP;cACertificate;"
  # cACertificate_test.output[0] evalutates to true when the permission is set
  when: not cACertificate_test.output[0]
